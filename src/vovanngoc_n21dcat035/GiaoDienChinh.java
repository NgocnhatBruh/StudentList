/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vovanngoc_n21dcat035;

import ChucNang.*;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author ngocn
 */
public class GiaoDienChinh extends javax.swing.JFrame {

    /**
     * Creates new form GiaoDien
     */
    public static DefaultTableModel dtm;
    static JTable jTable_SinhVien;
    public static String maChon = "";
    private GDThem GDThem = new GDThem();
    private GDXem GDXem = new GDXem();
    private GDSua GDSua = new GDSua();
    //GDChucNang cn;
    
    /**
     * Creates new form TestJFrame
     */

    public GiaoDienChinh() {
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        initComponents();       
        //cn.setGDC(GD);
        Action event = new Action() {
            @Override
            public void xoa(int row) {
                int option = JOptionPane.showConfirmDialog(
                        null, "Bạn có muốn xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    XuLySQL.xoaSV((String) DSSV.getValueAt(row, 1));
                    refreshDSSVTable(); 
                }
                 
            }

            @Override
            public void sua(int row) {
                GDSua.setThongTin(row);
                GDSua.getEditHoTen().setForeground(new Color(40,40,40));
                GDSua.getEditSDT().setForeground(new Color(40,40,40));
                GDSua.getEditMail().setForeground(new Color(40,40,40));
                GDSua.setVisible(true);
                GDSua.setLocationRelativeTo(null);
            }

            @Override
            public void xem(int row) {
                //setEnabled(false);
                GDXem.layThongTin(row);
                GDXem.setVisible(true);
                GDXem.setLocationRelativeTo(null);
            }
        };
        jTable_SinhVien = new JTable();
        XuLySQL.laySV();
        DSSV.getColumnModel().getColumn(4).setCellRenderer(new XuLyTable1());
        DSSV.getColumnModel().getColumn(4).setCellEditor(new XuLyTable2(event));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void refreshDSSVTable() {
        XuLySQL.laySV();
        DefaultTableModel model = (DefaultTableModel) DSSV.getModel();
        model.setRowCount(dtm.getRowCount());
        for(int i = 0; i < dtm.getRowCount(); i++){
            for(int j = 0; j < dtm.getColumnCount(); j++){
                DSSV.setValueAt(i + 1, i, 0);
                DSSV.setValueAt(dtm.getValueAt(i, 0), i, 1);
                DSSV.setValueAt(dtm.getValueAt(i, 1), i, 2);
                DSSV.setValueAt(dtm.getValueAt(i, 5), i, 3);
                TableColumnModel columnModel = DSSV.getColumnModel();
 
            }
        }
        //pack();
        //Khóa thay đổi thuộc tính bảng
        DSSV.getTableHeader().setResizingAllowed(false);
        DSSV.getTableHeader().setReorderingAllowed(false);
        //DSSV.setEnabled(false);
        DSSV.getTableHeader().setReorderingAllowed(false);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DSSV = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        NutThem = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        DSSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, ""},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Mã Sinh Viên", "Họ Và Tên", "Mail", "Chức Năng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DSSV.setToolTipText("");
        DSSV.setGridColor(new java.awt.Color(255, 255, 255));
        DSSV.setRowHeight(23);
        DSSV.setRowSelectionAllowed(false);
        DSSV.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                DSSVAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        DSSV.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DSSVMouseDragged(evt);
            }
        });
        DSSV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DSSVFocusGained(evt);
            }
        });
        DSSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DSSVMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DSSVMouseReleased(evt);
            }
        });
        DSSV.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DSSVPropertyChange(evt);
            }
        });
        DSSV.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                DSSVVetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(DSSV);
        if (DSSV.getColumnModel().getColumnCount() > 0) {
            DSSV.getColumnModel().getColumn(0).setMinWidth(30);
            DSSV.getColumnModel().getColumn(0).setMaxWidth(30);
            DSSV.getColumnModel().getColumn(1).setMaxWidth(150);
            DSSV.getColumnModel().getColumn(2).setMaxWidth(150);
            DSSV.getColumnModel().getColumn(3).setMaxWidth(250);
            DSSV.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("DANH SÁCH SINH VIÊN");

        NutThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        NutThem.setText("+ Thêm");
        NutThem.setToolTipText("");
        NutThem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NutThemItemStateChanged(evt);
            }
        });
        NutThem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NutThemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NutThemFocusLost(evt);
            }
        });
        NutThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NutThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NutThem))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NutThem)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DSSVAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DSSVAncestorAdded
        if(!GDSua.isVisible() && dtm != null)
        refreshDSSVTable();
    }//GEN-LAST:event_DSSVAncestorAdded

    
    
    private void NutThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NutThemActionPerformed
        if (NutThem.isSelected()) {
            GDThem.setVisible(true);
            GDThem.setLocationRelativeTo(null);
        } else {
                NutThem.setSelected(false);
                GDThem.dispose();
            
        }
    }//GEN-LAST:event_NutThemActionPerformed

    private void NutThemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NutThemFocusGained
        if(!GDThem.isVisible() && dtm != null){
            refreshDSSVTable();
            NutThem.setSelected(false);
        }
    }//GEN-LAST:event_NutThemFocusGained

    private void NutThemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NutThemFocusLost
        
    }//GEN-LAST:event_NutThemFocusLost

    private void DSSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DSSVMouseClicked
        
    }//GEN-LAST:event_DSSVMouseClicked

    private void DSSVPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DSSVPropertyChange
        
    }//GEN-LAST:event_DSSVPropertyChange

    private void DSSVVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_DSSVVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_DSSVVetoableChange

    private void DSSVMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DSSVMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_DSSVMouseDragged
    
    private void DSSVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DSSVMouseReleased

    }//GEN-LAST:event_DSSVMouseReleased

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased

    }//GEN-LAST:event_formMouseReleased

    private void NutThemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NutThemItemStateChanged

    }//GEN-LAST:event_NutThemItemStateChanged

    private void DSSVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DSSVFocusGained
        if(!GDSua.isVisible() && dtm != null){
            refreshDSSVTable();
        }
    }//GEN-LAST:event_DSSVFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GiaoDienChinh GD = new GiaoDienChinh();
                GD.setVisible(true);
                GD.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DSSV;
    private javax.swing.JToggleButton NutThem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void refreshDSSachTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
